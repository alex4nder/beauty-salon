<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>